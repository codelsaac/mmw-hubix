{
  "meta": {
    "project": "MMW Hubix - School Information Portal",
    "date": "2025-10-18",
    "prepared_by": "Software Development Manager"
  },
  "product_overview": "MMW Hubix is a modern, centralized web portal designed for C.C.C. Mong Man Wai College to consolidate essential school information, resources, and tools. It serves public users, IT prefects, and admins with tailored features including a dynamic resource hub, AI assistant, training library, team dashboards, and a comprehensive admin content management system, all built with a cutting-edge tech stack for responsiveness and accessibility.",
  "core_goals": [
    "Provide a unified, modern platform replacing outdated school IT prefect sites.",
    "Offer public access to curated school resources and announcements without login.",
    "Enable IT prefect team to manage events, tasks, trainings, and internal communications.",
    "Empower admins with full content and user management capabilities via a secure admin console.",
    "Implement robust authentication and role-based access controls to protect sensitive information.",
    "Ensure high usability with responsive design, accessibility, and intuitive navigation.",
    "Maintain system configurability and maintainability through database-backed settings and real-time updates."
  ],
  "key_features": [
    "Dynamic Resource Hub with search, category filters, and click tracking.",
    "AI Assistant chatbot for campus navigation, schedules, policies, and IT support.",
    "Public Club Announcements with RSVP and attendance tracking.",
    "Training Library supporting multiple resource formats and difficulty levels.",
    "User Profile Management with secure password change and preference settings.",
    "Team Dashboard featuring mission, org structure, calendar, tasks, and event management.",
    "Full Admin Console for user, category, article, and system settings management with role enforcement.",
    "Real-time Notification System for user alerts and updates.",
    "Database-backed System Settings for maintenance mode and site configuration.",
    "Comprehensive Authentication & Authorization using NextAuth.js with role-based permissions."
  ],
  "user_flow_summary": [
    "Public users access the Resource Hub and Club Announcements without logging in, with the option to interact using search and RSVP functionalities.",
    "Authenticated IT Prefects log in to view and manage the Team Dashboard, Internal Calendar, Training Library, and tasks, with permissions varying by role.",
    "Admins log in to access the Admin Console for managing users, resource categories, articles, system settings, and oversee site content and configuration.",
    "Users can manage their profiles, update personal information, change passwords, and set preferences via a dedicated profile dashboard.",
    "Notifications appear in real-time to users, keeping them informed of relevant updates, accessible through a notification bar and client hooks."
  ],
  "validation_criteria": [
    "All public features load and function correctly across supported devices and browsers without login errors.",
    "Authentication enforces role-based access properly, restricting admin features to authorized users only.",
    "CRUD operations for resources, categories, articles, users, and settings work with proper validation and error handling.",
    "Real-time notifications deliver timely updates without performance degradation or UI glitches.",
    "Search and filter functionalities in Resource Hub and Training Library return accurate, responsive results.",
    "Admin interfaces support batch actions, inline editing, undo/redo for user and category management.",
    "System settings changes apply immediately and persist through database updates, including maintenance mode activation.",
    "Security procedures prevent unauthorized data access, and password changes verify current credentials effectively.",
    "Database migrations apply cleanly for MySQL setups with no data loss or schema inconsistencies.",
    "UI components adhere to design guidelines including responsive layouts, smooth animations, and accessibility standards."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "Next.js 15",
      "React 18",
      "Tailwind CSS",
      "shadcn/ui",
      "Prisma ORM",
      "NextAuth.js (username auth)",
      "MySQL",
      "Zod",
      "React Hook Form",
      "Recharts",
      "React Data Grid"
    ],
    "features": [
      {
        "name": "Resource Hub",
        "description": "Homepage experience displaying dynamic school resources with search, category filters, and click tracking integrated with backend APIs.",
        "files": [
          "app/page.tsx",
          "components/resource-hub.tsx",
          "app/api/resources/route.ts",
          "app/api/categories/route.ts",
          "lib/resources.ts"
        ]
      },
      {
        "name": "Activity News & Announcements",
        "description": "Public-facing activity news listings backed by Prisma queries and admin-managed announcements with RSVP capabilities.",
        "files": [
          "app/activity-news/page.tsx",
          "components/activity-news-public.tsx",
          "app/api/activity-news/route.ts",
          "lib/activity-news.ts",
          "components/admin/activity-news-management.tsx"
        ]
      },
      {
        "name": "Training Library",
        "description": "Multi-format training resources (video, text, file) with category filters, difficulty levels, and admin CRUD endpoints.",
        "files": [
          "components/dashboard/training-library.tsx",
          "hooks/use-training-resources.ts",
          "app/api/training/route.ts",
          "app/api/training/categories/route.ts",
          "lib/training.ts"
        ]
      },
      {
        "name": "Admin Resource Management",
        "description": "Admin dashboard for managing resource catalog, including CRUD operations and category assignments.",
        "files": [
          "app/admin/resources/page.tsx",
          "components/admin/resource-management.tsx",
          "app/api/admin/resources/route.ts",
          "hooks/use-resources.ts",
          "lib/resources.ts"
        ]
      },
      {
        "name": "Article CMS",
        "description": "Full article publishing workflow with drafts, publishing, and public article rendering via slug routes.",
        "files": [
          "app/admin/articles/page.tsx",
          "components/admin/article-management.tsx",
          "app/api/admin/articles/route.ts",
          "app/articles/[slug]/page.tsx",
          "lib/validation-schemas.ts"
        ]
      },
      {
        "name": "Authentication & Authorization",
        "description": "Username-based NextAuth setup with role enforcement, permission middleware, and protected admin pages.",
        "files": [
          "app/api/auth/[...nextauth]/route.ts",
          "lib/auth-server.ts",
          "lib/permissions.ts",
          "app/admin/page.tsx",
          "hooks/use-auth.ts"
        ]
      },
      {
        "name": "Notification System",
        "description": "User notification APIs and real-time client updates with hooks and UI banner integration.",
        "files": [
          "app/api/notifications/route.ts",
          "lib/notification-service.ts",
          "hooks/use-notifications.ts",
          "components/notification-bar.tsx",
          "docs/NOTIFICATIONS.md"
        ]
      },
      {
        "name": "System Settings & Maintenance",
        "description": "Database-backed settings service powering maintenance mode, admin configuration panels, and public fallback UI.",
        "files": [
          "components/admin/system-settings.tsx",
          "hooks/use-settings.ts",
          "lib/settings-service.ts",
          "app/api/admin/settings/route.ts",
          "components/maintenance-page.tsx"
        ]
      },
      {
        "name": "Dashboard & Team Management",
        "description": "Internal dashboard widgets covering tasks, calendar, and team info with corresponding APIs and hooks.",
        "files": [
          "components/dashboard/dashboard-layout.tsx",
          "components/dashboard/internal-calendar.tsx",
          "hooks/use-dashboard-data.ts",
          "app/api/dashboard/tasks/route.ts",
          "lib/dashboard-data.ts"
        ]
      }
    ]
  }
}
