[
  {
    "id": "TC001",
    "title": "Username-based Login Success",
    "description": "Verify that a user can log in successfully using valid username and password credentials.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the login page."
      },
      {
        "type": "action",
        "description": "Enter a valid username and corresponding password."
      },
      {
        "type": "action",
        "description": "Click the login button."
      },
      {
        "type": "assertion",
        "description": "Verify the user is authenticated and redirected to the appropriate dashboard based on role."
      }
    ]
  },
  {
    "id": "TC002",
    "title": "Username-based Login Failure with Incorrect Credentials",
    "description": "Verify that login attempt fails with incorrect username or password and appropriate error message is displayed.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the login page."
      },
      {
        "type": "action",
        "description": "Enter an invalid username or incorrect password."
      },
      {
        "type": "action",
        "description": "Click the login button."
      },
      {
        "type": "assertion",
        "description": "Verify login fails and error message 'Invalid username or password' is shown without navigation."
      }
    ]
  },
  {
    "id": "TC003",
    "title": "Session Persistence After Login",
    "description": "Verify that after successful login, the user session persists across page reloads and protected routes are accessible.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in with valid credentials."
      },
      {
        "type": "action",
        "description": "Refresh the browser or navigate to a protected route."
      },
      {
        "type": "assertion",
        "description": "User remains authenticated and can access protected routes without re-login."
      }
    ]
  },
  {
    "id": "TC004",
    "title": "Role-based Access Control Enforcement",
    "description": "Verify that users with different roles (ADMIN, HELPER, GUEST) can only access permitted features and routes.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as ADMIN user and attempt to access all admin console routes and management features."
      },
      {
        "type": "assertion",
        "description": "ADMIN can access all admin console capabilities."
      },
      {
        "type": "action",
        "description": "Log in as HELPER user and attempt to access admin console features."
      },
      {
        "type": "assertion",
        "description": "HELPER can access only permitted internal dashboard and training resources, denied admin console."
      },
      {
        "type": "action",
        "description": "Access protected routes as GUEST user."
      },
      {
        "type": "assertion",
        "description": "GUEST user is restricted from internal and admin routes, only public resources accessible."
      }
    ]
  },
  {
    "id": "TC005",
    "title": "User Logout Functionality",
    "description": "Verify that the user can log out from the system and session is cleared.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in with valid credentials."
      },
      {
        "type": "action",
        "description": "Click the logout button."
      },
      {
        "type": "assertion",
        "description": "User session is terminated and redirected to public/home page with access only to public content."
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Public Resource Hub Access without Login",
    "description": "Verify that unauthenticated/public users can access the Resource Hub, view categories, and browse resources with filtering.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the Resource Hub page without logging in."
      },
      {
        "type": "assertion",
        "description": "Public resources and dynamic category filters are displayed correctly."
      },
      {
        "type": "action",
        "description": "Apply resource category filters and verify the filtered results update accordingly."
      },
      {
        "type": "assertion",
        "description": "Filtering correctly shows only resources within selected categories."
      }
    ]
  },
  {
    "id": "TC007",
    "title": "Resource Click Tracking",
    "description": "Verify that clicks on resource links in the public Resource Hub are tracked and recorded accurately.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Select and click a resource link in the Resource Hub."
      },
      {
        "type": "assertion",
        "description": "Click event is recorded in the backend analytics and reflected in admin reports or logs as expected."
      }
    ]
  },
  {
    "id": "TC008",
    "title": "AI Chat Assistant Accessibility and Basic Interaction",
    "description": "Verify that the AI chat assistant floating button is visible on all public pages and can open/close chat panel with smooth UI animations.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Load a public page such as Resource Hub."
      },
      {
        "type": "assertion",
        "description": "Floating AI Chat Assistant button is visible and interactable."
      },
      {
        "type": "action",
        "description": "Click the floating chat button."
      },
      {
        "type": "assertion",
        "description": "Chat panel opens with smooth animation; user can input queries."
      },
      {
        "type": "action",
        "description": "Send a simple query to the AI assistant."
      },
      {
        "type": "assertion",
        "description": "AI assistant responds appropriately without UI glitches."
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Admin User Management CRUD Operations",
    "description": "Verify that ADMIN users can create, read, update, and delete user accounts from the Admin Console with validation and error handling.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as ADMIN and navigate to user management page."
      },
      {
        "type": "action",
        "description": "Create a new user with valid details and assign roles."
      },
      {
        "type": "assertion",
        "description": "User is created and appears in user list."
      },
      {
        "type": "action",
        "description": "Update user's role and verify changes persist."
      },
      {
        "type": "assertion",
        "description": "Updated role reflects correctly in database and UI."
      },
      {
        "type": "action",
        "description": "Delete a user and confirm removal from user list."
      },
      {
        "type": "assertion",
        "description": "User no longer appears in user list and login is prevented."
      },
      {
        "type": "action",
        "description": "Attempt to create a user with missing required fields or invalid data."
      },
      {
        "type": "assertion",
        "description": "Form validation prevents submission and shows appropriate error messages."
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Admin Console Batch User Updates with Undo/Redo",
    "description": "Verify that ADMIN can perform batch updates or deletions on multiple user accounts and can undo or redo these actions correctly.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Select multiple users in admin user management."
      },
      {
        "type": "action",
        "description": "Perform batch update of user roles or batch deletion."
      },
      {
        "type": "assertion",
        "description": "Batch changes are reflected immediately in user list and database."
      },
      {
        "type": "action",
        "description": "Use undo functionality to revert batch operation."
      },
      {
        "type": "assertion",
        "description": "Previous state is restored correctly for all affected users."
      },
      {
        "type": "action",
        "description": "Use redo functionality to reapply batch operation."
      },
      {
        "type": "assertion",
        "description": "Batch changes are reapplied correctly without errors."
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Category Management CRUD and Sorting",
    "description": "Verify that category creation, editing, deletion, icon/color selection, and sorting work correctly in the Admin Console.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Log in as ADMIN and navigate to categories management."
      },
      {
        "type": "action",
        "description": "Create a new category with icon and color selection."
      },
      {
        "type": "assertion",
        "description": "New category appears with correct icon and color in UI."
      },
      {
        "type": "action",
        "description": "Edit existing category's name, icon, and color."
      },
      {
        "type": "assertion",
        "description": "Category updates persist and refresh correctly."
      },
      {
        "type": "action",
        "description": "Delete a category and confirm its removal."
      },
      {
        "type": "assertion",
        "description": "Deleted category no longer appears and is removed from related resources."
      },
      {
        "type": "action",
        "description": "Reorder categories and save sorting."
      },
      {
        "type": "assertion",
        "description": "Category order changes are saved and reflected in Resource Hub."
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Articles CMS Full CRUD with SEO and Slug Routing",
    "description": "Verify that articles can be created, edited, published, and deleted with SEO metadata support and slug-based URLs.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as ADMIN and open article management page."
      },
      {
        "type": "action",
        "description": "Create a new article with title, content, SEO tags, and featured image."
      },
      {
        "type": "assertion",
        "description": "New article is saved and appears in list with correct metadata."
      },
      {
        "type": "action",
        "description": "Edit article content and SEO metadata."
      },
      {
        "type": "assertion",
        "description": "Changes reflect in preview and on article page."
      },
      {
        "type": "action",
        "description": "Publish and unpublish articles."
      },
      {
        "type": "assertion",
        "description": "Article visibility updates accordingly for public users."
      },
      {
        "type": "action",
        "description": "Visit article URL via slug and verify correct article content loads."
      },
      {
        "type": "assertion",
        "description": "Slug-based routing correctly displays intended article."
      }
    ]
  },
  {
    "id": "TC013",
    "title": "IT Prefect Dashboard Access and Content Verification",
    "description": "Verify that authenticated IT prefect users can access their internal dashboard showing team info, calendars, training libraries, and task management features.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as IT prefect user (HELPER role)."
      },
      {
        "type": "assertion",
        "description": "Dashboard page loads showing team member directory, upcoming events in calendar, and training resources."
      },
      {
        "type": "action",
        "description": "Navigate through training libraries and mark progress."
      },
      {
        "type": "assertion",
        "description": "Training progress is saved and reflected in UI."
      },
      {
        "type": "action",
        "description": "Access tasks and verify task management features."
      },
      {
        "type": "assertion",
        "description": "Tasks can be viewed, updated, and filtered accordingly."
      }
    ]
  },
  {
    "id": "TC014",
    "title": "User Profile Update with Current Password Verification",
    "description": "Verify that users can update their profile information and must provide the current password to change their password successfully.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as a user and navigate to profile page."
      },
      {
        "type": "action",
        "description": "Attempt to update personal information such as email and phone number."
      },
      {
        "type": "assertion",
        "description": "Profile information updates and persists correctly."
      },
      {
        "type": "action",
        "description": "Attempt to change password with incorrect current password."
      },
      {
        "type": "assertion",
        "description": "Password change is rejected with appropriate error message."
      },
      {
        "type": "action",
        "description": "Change password providing correct current password, new password, and confirmation."
      },
      {
        "type": "assertion",
        "description": "Password is updated successfully and user can log in with the new password."
      }
    ]
  },
  {
    "id": "TC015",
    "title": "File Upload System Validation",
    "description": "Verify that file upload functionality correctly validates file types, sizes, and securely stores uploads with proper error handling.",
    "category": "error handling",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Attempt to upload a valid file type within size limits."
      },
      {
        "type": "assertion",
        "description": "File uploads successfully and appears accessible in UI."
      },
      {
        "type": "action",
        "description": "Attempt to upload an invalid file type or file exceeding size limit."
      },
      {
        "type": "assertion",
        "description": "Upload is rejected with clear validation error message."
      },
      {
        "type": "action",
        "description": "Verify that uploaded files are stored securely and accessible only with proper permissions."
      },
      {
        "type": "assertion",
        "description": "File storage paths and access controls enforce security best practices."
      }
    ]
  },
  {
    "id": "TC016",
    "title": "Real-time Notifications and Toast Alerts",
    "description": "Verify that all users receive real-time notifications and toast alerts for system updates and user engagement with correct display and dismissal behavior.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Trigger a system notification such as new announcement or task update."
      },
      {
        "type": "assertion",
        "description": "Notification appears in real-time as toast alert on user interface."
      },
      {
        "type": "action",
        "description": "Verify notifications display correctly across different user roles and pages."
      },
      {
        "type": "assertion",
        "description": "Toast alerts can be dismissed by user and do not reappear erroneously."
      }
    ]
  },
  {
    "id": "TC017",
    "title": "Dark/Light Theme Persistence and System Preference Detection",
    "description": "Verify that the theme system supports toggling between dark and light modes, persists user choice, and detects system-level theme preferences correctly.",
    "category": "ui",
    "priority": "Low",
    "steps": [
      {
        "type": "action",
        "description": "Toggle between dark and light theme modes using UI controls."
      },
      {
        "type": "assertion",
        "description": "Theme changes immediately reflect in UI with appropriate colors and styles."
      },
      {
        "type": "action",
        "description": "Refresh the page and verify the chosen theme persists."
      },
      {
        "type": "assertion",
        "description": "User's theme preference is retained after reload."
      },
      {
        "type": "action",
        "description": "Reset theme preference and change operating system theme preference."
      },
      {
        "type": "assertion",
        "description": "Application detects system theme preference and adjusts UI accordingly."
      }
    ]
  },
  {
    "id": "TC018",
    "title": "Global Error Handling and Fallback UI",
    "description": "Verify that the application properly catches unhandled errors and displays user-friendly error pages or boundaries.",
    "category": "error handling",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Simulate backend API failure or exception in a protected page."
      },
      {
        "type": "assertion",
        "description": "Error boundary catches the error and displays fallback UI with proper messaging."
      },
      {
        "type": "action",
        "description": "Navigate to a non-existent route."
      },
      {
        "type": "assertion",
        "description": "Not found error page is shown appropriately."
      },
      {
        "type": "action",
        "description": "Attempt access to protected page without authentication."
      },
      {
        "type": "assertion",
        "description": "Unauthorized access page is displayed with options to login."
      }
    ]
  },
  {
    "id": "TC019",
    "title": "Responsive Design Across Devices",
    "description": "Verify that the application layout and UI components render correctly and remain usable on desktop, tablet, and mobile screen sizes.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Load the application on desktop-sized screen."
      },
      {
        "type": "assertion",
        "description": "Layout is correct, navigation and content visible and usable."
      },
      {
        "type": "action",
        "description": "Load the application on tablet-sized screen."
      },
      {
        "type": "assertion",
        "description": "UI adapts with appropriate scaling, menus accessible and content readable."
      },
      {
        "type": "action",
        "description": "Load the application on mobile-sized screen."
      },
      {
        "type": "assertion",
        "description": "Mobile navigation and interface elements function correctly and remain accessible."
      }
    ]
  },
  {
    "id": "TC020",
    "title": "Performance and Caching Optimization",
    "description": "Verify that performance optimizations such as caching, loading states, and resource pre-loading work correctly without visible errors or data inconsistencies.",
    "category": "functional",
    "priority": "Low",
    "steps": [
      {
        "type": "action",
        "description": "Trigger loading of a resource page with expected loading skeletons or spinners displayed."
      },
      {
        "type": "assertion",
        "description": "Loading indicators show and disappear correctly after data load."
      },
      {
        "type": "action",
        "description": "Verify cached data is used on repeated access without redundant backend calls."
      },
      {
        "type": "assertion",
        "description": "Page load times improve and caching is verifiable via network tools."
      }
    ]
  }
]
